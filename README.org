* SILL website

This repository contains the source code for the SILL, the catalog of
recommended solutions for the public sector.

The SILL itself is maintained [[https://github.com/disic/sill][on this repository]].

* Develop

: ~$ git clone https://github.com/etalab/sillweb
: ~$ cd sillweb/
: ~$ lein test
: ~$ lein fig:build

Then check http://locahost:9500 then hack and see changes going live.
   
* Deploy

** Configure environment variables

You will need to configure these environment variables:

: SMTP_HOST: the host from which to send emails
: SMTP_LOGIN: the smtp login to use to send emails
: SMTP_PASSWORD: the smtp password to use to send emails
: SILLWEB_ADMIN_EMAIL: the email where to receive messages
: SILLWEB_FROM: the From header for sent emails
: SILLWEB_PORT: the port to run the application
: SILLWEB_MSGID_DOMAIN: what fqdn to use to build the message-id

** Deploy with lein uberjar

: ~$ git clone https://github.com/etalab/sillweb
: ~$ cd sillweb/
: ~$ lein clean
: ~$ lein fig:min
: ~$ lein uberjar
: ~$ java -jar target/sillweb-standalone.jar

Then go to https://localhost:3000 or to your custom base URL.

** Deploy with Docker

Assuming your environments variables are stored in ~~/.sillweb_envs~
and you want to expose the 3000 port:

: ~$ git clone https://github.com/etalab/sillweb
: ~$ cd sillweb/
: ~$ lein fig:min
: ~$ lein uberjar
: ~$ docker build -t sillweb .
: ~$ docker run -it -p 3000:3000 --env-file=~/.sillweb_envs sillweb

Then go to http://localhost:3000.

* Roadmap

There is no real roadmap but you can check [[https://github.com/etalab/sillweb/issues][our issues]] to see if you
can help or suggest a feature.

* Contribute

Your help is welcome.  You can contribute with bug reports, pull
requests or feature requests.

** Translation

If you want to help with the translation:

- add a new file =resources/public/index.[yourlanguagecode].html= by
  copying =resources/public/index.en.html=
- add your language to =src/cljc/sillweb/i18n.cljc=
- add relevant variables to =src/clj/sillweb/views.clj=

Hack and send a /pull request/, I would be happy to integrate your
contribution.

* Support the Clojure(script) ecosystem

If you like Clojure(script), please consider supporting maintainers by
donating to [[https://www.clojuriststogether.org][clojuriststogether.org]].

* License

2019 DINSIC, Bastien Guerry.

This application is published under the EPL 2.0 license.
